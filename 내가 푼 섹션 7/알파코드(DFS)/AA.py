import sys
sys.stdin=open("input.txt","r")


# 상태 트리 
# 리스트 -> 2 5 1 1 4
# 인덱스 -> 0 1 2 3 4
# 리스트 이름이 code라고 하면
# res 라는 리스트도 만들어야 한다.
# 상태 트리의 노드는 1번부터 26번까지 다 돈다.
# 알파벳을 다 검사한다고 생각하자
# 1자리 숫자라고 가정할 때와 2자리 숫자라고 가정할 떄가 필요하다.
# res라는 리스트에 0번 인덱스에 값을 담을 때
# 한 자리 숫자라고 보면 0번 인덱스에 한 자리 숫자만 넣고
# 두 자리 숫자라고 보면 0번 인덱스에 2자리 숫자를 한꺼번에 넣는다.

# P는 Position이다. res 리스트의 인덱스를 말한다.
def DFS(L,P):
    global cnt

    if L == n:
        cnt+=1
        #   여기에 도착했다면 P는 n+1인 상태 
        #   그래서 0부터 P-1 까지 돌게 한다. 
        for j in range(0,P):
            # chr => 숫자를 문자로 바꾸는 함수, char 타입으로 바꿔준다고 생각하자
            # 아스키 코드를 활용하는 문제가 나오면 자주 쓴다.
            # 아스키 코드 65부터 대문자 A기 떄문에 64를 더해줘야 한다.
            # res[j]의 값이 1부터 26이기 때문에 64를 더해야 올바를 아스키 코드가 입력된다.
            print(chr(res[j]+64),end='')
        print()
    
    else:
        # 알파벳 갯수 만큼, 1부터 26
        for i in range(1,27):
            # i가 1자리 숫자일 때
            if code[L] == i: # 코드의 L번 인덱스의 숫자가 i일 때를 골라야 한다.
                res[P] = i
                DFS(L+1,P+1)
            # i가 2자리 숫자일 때
            # i가 10보다 크거나 같을 떄
            #                                   이것 떄문에 마지막에 숫자 추가, 인덱스 아웃 오브 바운드 막기
            elif i>=10 and code[L] == i//10 and code[L+1] == i%10:
                res[P] = i
                # 두 자리 숫자니까 레벨에 2를 더하자.
                DFS(L+2,P+1)
            


if __name__ == "__main__":
    # 스플릿은 띄어쓰기가 있을 때만
    code = list(map(int,input()))
    n = len(code)
    # n을 리스트 마지막에 넣겠다.
    # n이 끝에 없다고 생각하면 
    # 만약 코드 리스트의 마지막에 도달했을 때 
    # 26 노드를 생각하면 인덱스 아웃 오브 바운드가 일어난다.
    # 위 2자리의 경우에서 처리를 하기 위해 뒤에 숫자 하나를 붙인 것이다.
    code.insert(n,-1)
    # 두 자리 숫자가 생길걸 대비하자
    res = [0]*(n+3)
    cnt = 0
    DFS(0,0)
    print(cnt)